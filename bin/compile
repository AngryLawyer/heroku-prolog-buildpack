#!/bin/bash

##
# usage: bin/compile <build-dir> <cache-dir>

set -e
bpdir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
test -z ${build} && exit
cache=$(cd "$2/" && pwd)
test -z ${cache} && exit
DEFAULT_SWI_VERSION="master"
if [ -f ${build}/.preferred_swi_version ]; then
    SWI_VERSION=$(cat ${build}/.preferred_swi_version)
fi
ver=${SWI_VERSION:=${DEFAULT_SWI_VERSION}}
tarball=${ver}.tgz
PROFILE=${HOME}/.profile.d

echo "-----> Using SWI Prolog version $ver"
(
    set -e
    # We MUST do this or git will go bezerk when we try to do anything to the checked-out SWI repository
    unset GIT_DIR
    # Already got a servicable build of SWI-Prolog?
    ls -la ${cache}
    test -f ${cache}/swipl-${ver}.tgz && exit
    # Otherwise, we must compile one. Build it in ${build}/swipl-build, and install to /app/.local then compress
    # /app/.local to ${cache}/swipl-${ver}.tgz
    rm -rf ${build}/swipl-build
    mkdir -p ${build}/swipl-build
    cd ${build}/swipl-build
    echo "-------> Fetching SWI Prolog from git"
    git clone --branch ${ver} https://github.com/SWI-Prolog/swipl-devel.git
    cd swipl-devel
    echo "-------> Switching to version ${ver}"
    git checkout ${ver}
    echo "-------> Building SWI Prolog $ver in ${build}/swipl-build"
    # First apply a very small patch so we can compile on Cedar. This seems to be harmless. Hopefully.
    sed -i -e 's@2.66@2.65@g' src/configure.in
    # Prepare the build
    ./prepare --yes --all --man
    # Configure and build it
    ./configure --with-world --prefix=/app/.local && make || exit 1
    echo "-------> Installing SWI Prolog $ver"
    make install || exit 1
    cd /app
    tar -czf ${cache}/swipl-${ver}.tgz .local
    ls -la ${cache}
    # Now clean up
    rm -rf ${build}/swipl-build
    rm -rf /app/.local
    echo "-------> Installed SWI Prolog $ver"
)
echo "-----> Found SWI Prolog version $ver ready for use in ${cache}/swipl-${ver}.tgz. Unpacking..."
cd /app
tar -xzf ${cache}/swipl-${ver}.tgz
PATH=${cache}/.local/bin:$PATH
export PATH

echo "-----> Compiling slug"
cd $build
pwd
swipl="/app/.local/bin/swipl"
arch=$(${swipl} --arch)
cp /app/.local/lib/swipl-7.1.23/lib/${arch}/*.so ${build}/
echo /app/.local/bin/swipl -o /app/splunge -g go -t prolog -c main.pl
/app/.local/bin/swipl -o ${build}/splunge -g go -t prolog -c main.pl
echo "-----> Build succeeded"

