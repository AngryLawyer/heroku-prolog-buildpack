#!/bin/bash

##
# usage: bin/compile <build-dir> <cache-dir>

set -e
bpdir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
test -z ${build} && exit
cache=$(cd "$2/" && pwd)
test -z ${cache} && exit
DEFAULT_SWI_VERSION="master"
if [ -f ${build}/.preferred_swi_version ]; then
    SWI_VERSION=$(cat ${build}/.preferred_swi_version)
fi
ver=${SWI_VERSION:=${DEFAULT_SWI_VERSION}}
tarball=${ver}.tgz
PROFILE=${HOME}/.profile.d



echo "-----> Using SWI Prolog version $ver"
(
    set -e

    # Already cached?
    #test -f ${cache}/${ver}-compiled && exit

    rm -rf ${cache}/* # be sure not to build up cruft
    cd ${cache}
    rm -rf ${ver}
    mkdir ${ver}
    cd ${ver}
    echo "-------> Fetching SWI Prolog from git"
    pwd
    echo git clone https://github.com/SWI-Prolog/swipl-devel.git
    git clone https://github.com/SWI-Prolog/swipl-devel.git || exit 1
    cd swipl-devel
    pwd
    ls -a
    echo "-------> Ensuring HTTP"
    echo git submodule update --init packages/http
    git submodule update --init packages/http

    echo "-------> Building SWI Prolog $ver in ${cache}/${ver}"
    sed -i -e 's@2.66@2.65@g' src/configure.in
    ./prepare --yes --all --man
    ./configure --with-world --prefix=/app/swipl-${ver} && make || exit 1
    echo "-------> Installing SWI Prolog $ver"
    make install || exit 1
    touch ${cache}/${ver}-compiled
    echo "-------> Installed SWI Prolog $ver"
)

PATH=/app/swipl-${ver}/bin:$PATH
export PATH

cd $build

echo "-----> Build succeeded"

